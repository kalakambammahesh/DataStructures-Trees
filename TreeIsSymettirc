 // returns true if trees with roots as root1 and root2 are mirror 
    boolean isMirror(Node node1, Node node2)  
    { 
        if(node1 == null && node2 == null) {
            return true;
        }
        if(node1 != null && node2 != null && node1.key == node2.key) {
            return isMirror(node1.left, node2.right) && isMirror(node1.right ,node2.left);
        }
        return false; 
    } 
   
    //Method which starts
    boolean isSymmetric(Node node)  
    { 
        // check if tree is mirror of itself 
        return isMirror(root, root); 
    } 
